{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jos%C3%A9%20Luis%20CS/Documents/Modular/proyecto/v5/gantt-flow/front/components/button.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\n\nexport default function Button({\n    text,\n    icon,\n    iconWidth = 24,  // Tamaño por defecto\n    iconHeight = 24, // Tamaño por defecto\n    type = \"button\",\n    bgColor = \"bg-sky-200\",\n    border = \"\",\n    hover = \"\",\n    redirectTo = \"\",\n    onClick\n}: {\n    text?: string;\n    icon?: string;\n    iconWidth?: number;\n    iconHeight?: number;\n    type?: \"button\" | \"submit\" | \"reset\";\n    bgColor?: string;\n    border?: string;\n    hover?: string;\n    redirectTo?: string;\n    onClick?: () => void;\n}) {\n    const router = useRouter();\n\n    const handleClick = async () => {\n        if (onClick) {\n            await onClick();\n        } else if (redirectTo) {\n            router.push(redirectTo);\n        }\n    };\n\n    return (\n        <button\n            type={type}\n            className={`p-2 rounded-lg flex items-center justify-center ${bgColor} transition ${border} ${hover}`}\n            onClick={handleClick}\n        >\n            {icon && <Image src={icon} alt=\"Icon\" width={iconWidth} height={iconHeight} />}\n            {text}\n        </button>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,OAAO,EAC3B,IAAI,EACJ,IAAI,EACJ,YAAY,EAAE,EACd,aAAa,EAAE,EACf,OAAO,QAAQ,EACf,UAAU,YAAY,EACtB,SAAS,EAAE,EACX,QAAQ,EAAE,EACV,aAAa,EAAE,EACf,OAAO,EAYV;IACG,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAChB,IAAI,SAAS;YACT,MAAM;QACV,OAAO,IAAI,YAAY;YACnB,OAAO,IAAI,CAAC;QAChB;IACJ;IAEA,qBACI,8OAAC;QACG,MAAM;QACN,WAAW,CAAC,gDAAgD,EAAE,QAAQ,YAAY,EAAE,OAAO,CAAC,EAAE,OAAO;QACrG,SAAS;;YAER,sBAAQ,8OAAC,6HAAA,CAAA,UAAK;gBAAC,KAAK;gBAAM,KAAI;gBAAO,OAAO;gBAAW,QAAQ;;;;;;YAC/D;;;;;;;AAGb"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jos%C3%A9%20Luis%20CS/Documents/Modular/proyecto/v5/gantt-flow/front/app/lib/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api'; // URL de tu backend\n\nexport const createUser = async (userData: { name: string, email: string, mobile: string, password: string }) => {\n    try {\n        const response = await axios.post(`${API_URL}/users`, userData);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const loginUser = async (userData: { email: string, password: string }) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/login`, userData);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const sendRecoveryEmail = async (email: string) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/forgot-password`, { email });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const resetPassword = async (token: string, newPassword: string) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/reset-password`, { token, newPassword });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const createUserAdmin = async (userData: { name: string, email: string, mobile: string, password: string, role: string, }) => {\n    try {\n        const response = await axios.post(`${API_URL}/admin`, userData);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,UAAU,6BAA6B,oBAAoB;AAE1D,MAAM,aAAa,OAAO;IAC7B,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,MAAM,CAAC,EAAE;QACtD,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,YAAY,OAAO;IAC5B,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,YAAY,CAAC,EAAE;QAC5D,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,oBAAoB,OAAO;IACpC,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,sBAAsB,CAAC,EAAE;YAAE;QAAM;QAC9E,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,gBAAgB,OAAO,OAAe;IAC/C,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,qBAAqB,CAAC,EAAE;YAAE;YAAO;QAAY;QAC1F,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,kBAAkB,OAAO;IAClC,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,MAAM,CAAC,EAAE;QACtD,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jos%C3%A9%20Luis%20CS/Documents/Modular/proyecto/v5/gantt-flow/front/app/auth/login/page.tsx"],"sourcesContent":["'use client';\n\nimport Button from \"@/components/button\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { loginUser  } from '../../lib/api';\n\nexport default function Login() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [role, setRole] = useState('');\n    const [error, setError] = useState('');\n    const router = useRouter();\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n\n        try {\n            const response = await loginUser ({ email, password });\n            console.log('Login exitoso:', response);\n            console.log('Rol del usuario:', response.user.role);\n\n            localStorage.setItem('token', response.token);\n            localStorage.setItem('user', JSON.stringify(response.user));\n\n            // Verificar el rol del usuario\n            if (response.user.role === 'admin') {\n                router.push('/admin/users'); // Redirigir a la interfaz de administrador\n            } else {\n                router.push('/dashboard'); // Redirigir a la interfaz normal\n            }\n        } catch (err) {\n            setError('Error al iniciar sesión. Verifica tus credenciales.');\n            console.error(err);\n        }\n    };\n\n    return (\n        <main className=\"flex h-screen\">\n            {/* Sección del formulario */}\n            <div className=\"flex-1 flex flex-col items-center justify-center p-8\">\n                <div className=\"w-full max-w-md\">\n                    <h1 className=\"font-bold text-2xl mb-6 text-center\">Iniciar sesión</h1>\n\n                    <form onSubmit={handleSubmit} className=\"space-y-6\">\n                        <div className=\"space-y-4\">\n                            <div>\n                                <label className=\"font-bold\">Correo</label>\n                                <input\n                                    type=\"email\"\n                                    placeholder=\"Escribe aquí tu correo\"\n                                    className=\"w-full px-4 py-3 border rounded-lg bg-gray-50 focus:outline-none focus:ring-2 focus:ring-green-500\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    required\n                                />\n                            </div>\n\n                            <div>\n                                <label className=\"font-bold\">Contraseña</label>\n                                <input\n                                    type=\"password\"\n                                    placeholder=\"Escribe aquí tu contraseña\"\n                                    className=\"w-full px-4 py-3 border rounded-lg bg-gray-50 focus:outline-none focus:ring-2 focus:ring-green-500\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    required\n                                />\n                            </div>\n                        </div>\n\n                        {error && <p className=\"text-red-500 text-center\">{error}</p>}\n\n                        <Button\n                            icon=\"/loginButton.svg\"\n                            iconWidth={500}\n                            iconHeight={64}\n                            bgColor=\"bg-transparent\"\n                            border=\"border-none\"\n                            type=\"submit\"\n                        />\n\n                        <div className=\"text-center space-y-4\">\n                            <Link href=\"/auth/forgot-password\" className=\"text-gray-400 hover:underline block\">\n                                ¿Olvidaste tu contraseña?\n                            </Link>\n\n                            <Link href=\"/auth/signUp\" className=\"text-gray-400 hover:underline block\">\n                                ¿No tienes cuenta? Regístrate\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            {/* Sección de la imagen */}\n            <div className=\"hidden lg:flex flex-col justify-center items-center space-y-8 w-[700px] bg-green-500 border\">\n                <div>\n                    <Image\n                        className=\"dark:invert\"\n                        src=\"/logoSignUpLogin.svg\"\n                        alt=\"Logo de GanttFlow\"\n                        width={450}\n                        height={207}\n                        priority\n                    />\n                </div>\n\n                <div className=\"flex text-white text-xl font-semibold\">\n                    <p>La solución que necesitas para tu proyecto</p>\n                </div>\n            </div>\n        </main>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASe,SAAS;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,SAAS;QAET,IAAI;YACA,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD,EAAG;gBAAE;gBAAO;YAAS;YACpD,QAAQ,GAAG,CAAC,kBAAkB;YAC9B,QAAQ,GAAG,CAAC,oBAAoB,SAAS,IAAI,CAAC,IAAI;YAElD,aAAa,OAAO,CAAC,SAAS,SAAS,KAAK;YAC5C,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,SAAS,IAAI;YAEzD,+BAA+B;YAC/B,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,SAAS;gBAChC,OAAO,IAAI,CAAC,iBAAiB,2CAA2C;YAC5E,OAAO;gBACH,OAAO,IAAI,CAAC,eAAe,iCAAiC;YAChE;QACJ,EAAE,OAAO,KAAK;YACV,SAAS;YACT,QAAQ,KAAK,CAAC;QAClB;IACJ;IAEA,qBACI,8OAAC;QAAK,WAAU;;0BAEZ,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAAsC;;;;;;sCAEpD,8OAAC;4BAAK,UAAU;4BAAc,WAAU;;8CACpC,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;;8DACG,8OAAC;oDAAM,WAAU;8DAAY;;;;;;8DAC7B,8OAAC;oDACG,MAAK;oDACL,aAAY;oDACZ,WAAU;oDACV,OAAO;oDACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oDACxC,QAAQ;;;;;;;;;;;;sDAIhB,8OAAC;;8DACG,8OAAC;oDAAM,WAAU;8DAAY;;;;;;8DAC7B,8OAAC;oDACG,MAAK;oDACL,aAAY;oDACZ,WAAU;oDACV,OAAO;oDACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oDAC3C,QAAQ;;;;;;;;;;;;;;;;;;gCAKnB,uBAAS,8OAAC;oCAAE,WAAU;8CAA4B;;;;;;8CAEnD,8OAAC,qHAAA,CAAA,UAAM;oCACH,MAAK;oCACL,WAAW;oCACX,YAAY;oCACZ,SAAQ;oCACR,QAAO;oCACP,MAAK;;;;;;8CAGT,8OAAC;oCAAI,WAAU;;sDACX,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAwB,WAAU;sDAAsC;;;;;;sDAInF,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAe,WAAU;sDAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAS1F,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;kCACG,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACF,WAAU;4BACV,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,QAAQ;;;;;;;;;;;kCAIhB,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAKvB"}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}