{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jos%C3%A9%20Luis%20CS/Documents/Modular/proyecto/v5/gantt-flow/front/components/button.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\n\nexport default function Button({\n    text,\n    icon,\n    iconWidth = 24,  // Tamaño por defecto\n    iconHeight = 24, // Tamaño por defecto\n    type = \"button\",\n    bgColor = \"bg-sky-200\",\n    border = \"\",\n    hover = \"\",\n    redirectTo = \"\",\n    onClick\n}: {\n    text?: string;\n    icon?: string;\n    iconWidth?: number;\n    iconHeight?: number;\n    type?: \"button\" | \"submit\" | \"reset\";\n    bgColor?: string;\n    border?: string;\n    hover?: string;\n    redirectTo?: string;\n    onClick?: () => void;\n}) {\n    const router = useRouter();\n\n    const handleClick = async () => {\n        if (onClick) {\n            await onClick();\n        } else if (redirectTo) {\n            router.push(redirectTo);\n        }\n    };\n\n    return (\n        <button\n            type={type}\n            className={`p-2 rounded-lg flex items-center justify-center ${bgColor} transition ${border} ${hover}`}\n            onClick={handleClick}\n        >\n            {icon && <Image src={icon} alt=\"Icon\" width={iconWidth} height={iconHeight} />}\n            {text}\n        </button>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,OAAO,EAC3B,IAAI,EACJ,IAAI,EACJ,YAAY,EAAE,EACd,aAAa,EAAE,EACf,OAAO,QAAQ,EACf,UAAU,YAAY,EACtB,SAAS,EAAE,EACX,QAAQ,EAAE,EACV,aAAa,EAAE,EACf,OAAO,EAYV;IACG,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAChB,IAAI,SAAS;YACT,MAAM;QACV,OAAO,IAAI,YAAY;YACnB,OAAO,IAAI,CAAC;QAChB;IACJ;IAEA,qBACI,8OAAC;QACG,MAAM;QACN,WAAW,CAAC,gDAAgD,EAAE,QAAQ,YAAY,EAAE,OAAO,CAAC,EAAE,OAAO;QACrG,SAAS;;YAER,sBAAQ,8OAAC,6HAAA,CAAA,UAAK;gBAAC,KAAK;gBAAM,KAAI;gBAAO,OAAO;gBAAW,QAAQ;;;;;;YAC/D;;;;;;;AAGb"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jos%C3%A9%20Luis%20CS/Documents/Modular/proyecto/v5/gantt-flow/front/app/admin/users/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport Button from \"../../../components/button\";\r\nimport { getAllUsersAdmin } from \"@/app/lib/api\";\r\n\r\ninterface User {\r\n    _id: string;\r\n    name: string;\r\n    email: string;\r\n}\r\n\r\nexport default function adminPage() {\r\n    const router = useRouter();\r\n    const [date, setDate] = useState('');\r\n    const [user, setUser] = useState<{ name: string } | null>(null);\r\n    const [users, setUsers] = useState<User[]>([]); // Estado para almacenar la lista de usuarios\r\n    const [editingUser, setEditingUser] = useState<User | null>(null); // Estado para el usuario que se está editando\r\n\r\n    // Obtener usuarios desde el backend\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await fetch('/api/admin/users');\r\n            const data = await response.json();\r\n            setUsers(data);\r\n        } catch (error) {\r\n            console.error('Error al obtener los usuarios:', error);\r\n        }\r\n    };\r\n\r\n    // Función para manejar la edición de un usuario\r\n    const handleEditUser = (user: User) => {\r\n        setEditingUser(user);\r\n    };\r\n\r\n    // Función para guardar los cambios de un usuario\r\n    const handleSaveUser = async (updatedUser: User) => {\r\n        try {\r\n            const response = await fetch(`/api/admin/users/${updatedUser._id}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(updatedUser),\r\n            });\r\n            if (response.ok) {\r\n                fetchUsers(); // Actualizar la lista de usuarios\r\n                setEditingUser(null); // Salir del modo edición\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al actualizar el usuario:', error);\r\n        }\r\n    };\r\n\r\n    // Función para eliminar un usuario\r\n    const handleDeleteUser = async (userId: string) => {\r\n        try {\r\n            const response = await fetch(`/api/admin/users/${userId}`, {\r\n                method: 'DELETE',\r\n            });\r\n            if (response.ok) {\r\n                fetchUsers(); // Actualizar la lista de usuarios\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al eliminar el usuario:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Obtener el token y los datos del usuario desde localStorage\r\n        const token = localStorage.getItem('token');\r\n        const userData = localStorage.getItem('user');\r\n\r\n        if (!token || !userData) {\r\n            // Si no hay token o datos de usuario, redirigir al login\r\n            router.push('/auth/login');\r\n        } else {\r\n            // Si hay datos de usuario, parsearlos y guardarlos en el estado\r\n            setUser(JSON.parse(userData));\r\n        }\r\n\r\n        // Formatear la fecha\r\n        const today = new Date();\r\n        const dayName = today.toLocaleDateString('es-MX', { weekday: 'long' });\r\n        const month = today.toLocaleDateString('es-MX', { month: 'long' });\r\n        const day = today.getDate();\r\n        const year = today.getFullYear();\r\n\r\n        const capitalizedDayName = dayName.charAt(0).toUpperCase() + dayName.slice(1);\r\n        const capitalizedMonth = month.charAt(0).toUpperCase() + month.slice(1);\r\n\r\n        const formattedDate = `${capitalizedDayName}, ${day} de ${capitalizedMonth} de ${year}`;\r\n        setDate(formattedDate);\r\n\r\n        // Obtener la lista de usuarios al cargar la página\r\n        fetchUsers();\r\n    }, [router]);\r\n\r\n    const handleLogout = () => {\r\n        // Eliminar el token y los datos del usuario de localStorage\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n\r\n        // Redirigir al login\r\n        router.push('/auth/login');\r\n    };\r\n\r\n    if (!user) {\r\n        return <p>Cargando...</p>; // Mostrar un mensaje de carga mientras se verifica la autenticación\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex flex-col m-4 mx-4\">\r\n            {/* Header */}\r\n            <header className=\"flex justify-start items-center\">\r\n                <div className=\"ml-8\">\r\n                    <Image\r\n                        className=\"dark:invert\"\r\n                        src=\"/logo.svg\"\r\n                        alt=\"Next.js logo\"\r\n                        width={40}\r\n                        height={40}\r\n                        priority\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Image\r\n                        className=\"dark:invert\"\r\n                        src=\"/ganttflow.svg\"\r\n                        alt=\"Ganttflow logo\"\r\n                        width={114}\r\n                        height={18}\r\n                        priority\r\n                    />\r\n                </div>\r\n                <div className=\"ml-auto\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search\"\r\n                        className=\"pl-4 pr-96 py-2 border border-blue-500 placeholder-black rounded-full\"\r\n                    />\r\n                </div>\r\n                <div className=\"ml-auto mr-4\">\r\n                    <Button\r\n                        icon=\"/bell.svg\"\r\n                        iconWidth={40}\r\n                        iconHeight={40}\r\n                        bgColor=\"bg-transparent\"\r\n                        border=\"border-none\"\r\n                    />\r\n                </div>\r\n                <div className=\"space-x-16\">\r\n                    <Button\r\n                        icon=\"/avatar.svg\"\r\n                        iconWidth={40}\r\n                        iconHeight={40}\r\n                        bgColor=\"bg-transparent\"\r\n                        border=\"border-none\"\r\n                    />\r\n                </div>\r\n            </header>\r\n\r\n            {/* Main content */}\r\n            <main className=\"flex flex-row justify-start flex-grow\">\r\n                {/* Barra lateral */}\r\n                <div className=\"w-[219px] h-[720px] bg-green-500 rounded-lg shadow-lg mt-8 mr-8 text-white flex flex-col p-4\">\r\n                    {/* Navigation Items */}\r\n                    <div className=\"flex flex-col space-y-4\">\r\n                        <Link href=\"/admin/users\" className=\"flex items-center space-x-1\">\r\n                            <Button\r\n                                icon=\"/home.svg\"\r\n                                iconWidth={30}\r\n                                iconHeight={30}\r\n                                bgColor=\"bg-transparent\"\r\n                                border=\"border-none\"\r\n                            />\r\n                            <span>Inicio</span>\r\n                        </Link>\r\n                        <Link href=\"/admin/users\" className=\"flex items-center space-x-1\">\r\n                            <Button\r\n                                icon=\"/users.svg\"\r\n                                iconWidth={30}\r\n                                iconHeight={30}\r\n                                bgColor=\"bg-transparent\"\r\n                                border=\"border-none\"\r\n                            />\r\n                            <span>Usuarios</span>\r\n                        </Link>\r\n                        <Link href=\"/admin/settings\" className=\"flex items-center space-x-1\">\r\n                            <Button\r\n                                icon=\"/settings.svg\"\r\n                                iconWidth={30}\r\n                                iconHeight={30}\r\n                                bgColor=\"bg-transparent\"\r\n                                border=\"border-none\"\r\n                            />\r\n                            <span>Configuración</span>\r\n                        </Link>\r\n                        <Link href=\"/admin/permissions\" className=\"flex items-center space-x-1\">\r\n                            <Button\r\n                                icon=\"/permissions.svg\"\r\n                                iconWidth={30}\r\n                                iconHeight={30}\r\n                                bgColor=\"bg-transparent\"\r\n                                border=\"border-none\"\r\n                            />\r\n                            <span>Permisos</span>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    {/* Logout */}\r\n                    <div className=\"flex items-center space-x-1 mt-auto\">\r\n                        <Button\r\n                            icon=\"/logout.svg\"\r\n                            iconWidth={32}\r\n                            iconHeight={30}\r\n                            bgColor=\"bg-transparent\"\r\n                            border=\"border-none\"\r\n                            onClick={handleLogout}\r\n                        />\r\n                        <span onClick={handleLogout} className=\"cursor-pointer\">\r\n                            Cerrar sesión\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Contenido principal */}\r\n                <div className=\"flex flex-col flex-grow ml-8\">\r\n                    <p className=\"mt-14 font-semibold\">{date}</p>\r\n                    <h1 className=\"text-7xl mt-4\">Hola, {user.name}</h1>\r\n\r\n                    {/* Tabla de usuarios */}\r\n                    <div className=\"mt-8\">\r\n                        <h2 className=\"text-2xl font-bold mb-4\">Gestión de Usuarios</h2>\r\n                        <table className=\"min-w-full bg-white border border-gray-300\">\r\n                            <thead>\r\n                                <tr className=\"bg-green-500\">\r\n                                    <th className=\"py-2 px-4 border-b\">Nombre</th>\r\n                                    <th className=\"py-2 px-4 border-b\">Email</th>\r\n                                    <th className=\"py-2 px-4 border-b\">Contraseña</th>\r\n                                    <th className=\"py-2 px-4 border-b\">Rol</th>\r\n                                    <th className=\"py-2 px-4 border-b\">Acciones</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map((user) => (\r\n                                    <tr key={user._id}>\r\n                                        <td className=\"py-2 px-4 border-b\">\r\n                                            {editingUser?._id === user._id ? (\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={editingUser.name}\r\n                                                    onChange={(e) =>\r\n                                                        setEditingUser({ ...editingUser, name: e.target.value })\r\n                                                    }\r\n                                                />\r\n                                            ) : (\r\n                                                user.name\r\n                                            )}\r\n                                        </td>\r\n                                        <td className=\"py-2 px-4 border-b\">\r\n                                            {editingUser?._id === user._id ? (\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    value={editingUser.email}\r\n                                                    onChange={(e) =>\r\n                                                        setEditingUser({ ...editingUser, email: e.target.value })\r\n                                                    }\r\n                                                />\r\n                                            ) : (\r\n                                                user.email\r\n                                            )}\r\n                                        </td>\r\n                                        <td className=\"py-2 px-4 border-b\">\r\n                                            {editingUser?._id === user._id ? (\r\n                                                <button\r\n                                                    onClick={() => handleSaveUser(editingUser)}\r\n                                                    className=\"bg-blue-500 text-white px-4 py-1 rounded\"\r\n                                                >\r\n                                                    Guardar\r\n                                                </button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    onClick={() => handleEditUser(user)}\r\n                                                    className=\"bg-yellow-500 text-white px-4 py-1 rounded\"\r\n                                                >\r\n                                                    Editar\r\n                                                </button>\r\n                                            )}\r\n                                            <button\r\n                                                onClick={() => handleDeleteUser(user._id)}\r\n                                                className=\"bg-red-500 text-white px-4 py-1 rounded ml-2\"\r\n                                            >\r\n                                                Eliminar\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}