{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jos%C3%A9%20Luis%20CS/Documents/Modular/proyecto/v4/gantt-flow/front/components/button.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\n\nexport default function Button({\n    text,\n    icon,\n    iconWidth = 24,  // Tamaño por defecto\n    iconHeight = 24, // Tamaño por defecto\n    type = \"button\",\n    bgColor = \"bg-sky-200\",\n    border = \"\",\n    hover = \"\",\n    redirectTo = \"\",\n    onClick\n}: {\n    text?: string;\n    icon?: string;\n    iconWidth?: number;\n    iconHeight?: number;\n    type?: \"button\" | \"submit\" | \"reset\";\n    bgColor?: string;\n    border?: string;\n    hover?: string;\n    redirectTo?: string;\n    onClick?: () => void;\n}) {\n    const router = useRouter();\n\n    const handleClick = async () => {\n        if (onClick) {\n            await onClick();\n        } else if (redirectTo) {\n            router.push(redirectTo);\n        }\n    };\n\n    return (\n        <button\n            type={type}\n            className={`p-2 rounded-lg flex items-center justify-center ${bgColor} transition ${border} ${hover}`}\n            onClick={handleClick}\n        >\n            {icon && <Image src={icon} alt=\"Icon\" width={iconWidth} height={iconHeight} />}\n            {text}\n        </button>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,OAAO,EAC3B,IAAI,EACJ,IAAI,EACJ,YAAY,EAAE,EACd,aAAa,EAAE,EACf,OAAO,QAAQ,EACf,UAAU,YAAY,EACtB,SAAS,EAAE,EACX,QAAQ,EAAE,EACV,aAAa,EAAE,EACf,OAAO,EAYV;IACG,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAChB,IAAI,SAAS;YACT,MAAM;QACV,OAAO,IAAI,YAAY;YACnB,OAAO,IAAI,CAAC;QAChB;IACJ;IAEA,qBACI,8OAAC;QACG,MAAM;QACN,WAAW,CAAC,gDAAgD,EAAE,QAAQ,YAAY,EAAE,OAAO,CAAC,EAAE,OAAO;QACrG,SAAS;;YAER,sBAAQ,8OAAC,6HAAA,CAAA,UAAK;gBAAC,KAAK;gBAAM,KAAI;gBAAO,OAAO;gBAAW,QAAQ;;;;;;YAC/D;;;;;;;AAGb"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jos%C3%A9%20Luis%20CS/Documents/Modular/proyecto/v4/gantt-flow/front/app/lib/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api'; // URL de tu backend\n\nexport const createUser = async (userData: { name: string, email: string, mobile: string, password: string }) => {\n    try {\n        const response = await axios.post(`${API_URL}/users`, userData);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const loginUser = async (userData: { email: string, password: string }) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/login`, userData);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const sendRecoveryEmail = async (email: string) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/forgot-password`, { email });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const resetPassword = async (token: string, newPassword: string) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/reset-password`, { token, newPassword });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,UAAU,6BAA6B,oBAAoB;AAE1D,MAAM,aAAa,OAAO;IAC7B,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,MAAM,CAAC,EAAE;QACtD,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,YAAY,OAAO;IAC5B,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,YAAY,CAAC,EAAE;QAC5D,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,oBAAoB,OAAO;IACpC,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,sBAAsB,CAAC,EAAE;YAAE;QAAM;QAC9E,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,gBAAgB,OAAO,OAAe;IAC/C,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,qBAAqB,CAAC,EAAE;YAAE;YAAO;QAAY;QAC1F,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jos%C3%A9%20Luis%20CS/Documents/Modular/proyecto/v4/gantt-flow/front/app/auth/forgot-password/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Button from '@/components/button';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { sendRecoveryEmail } from '@/app/lib/api';\r\n\r\nexport default function ForgotPassword() {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n    const router = useRouter();\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        try {\r\n            const data = await sendRecoveryEmail(email);\r\n            setMessage(data.message);\r\n        } catch (err) {\r\n            if (err instanceof Error) {\r\n                setError(err.message || 'Error al enviar la solicitud');\r\n            } else {\r\n                setError('Error desconocido al enviar la solicitud');\r\n            }\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className=\"flex h-screen\">\r\n            {/* Sección del formulario */}\r\n            <div className=\"flex-1 flex flex-col items-center justify-center p-8\">\r\n                <div className=\"w-full max-w-md\">\r\n                    <h1 className=\"font-bold text-2xl mb-6 text-center\">Recuperar contraseña</h1>\r\n\r\n                    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                        <div>\r\n                            <label className=\"font-bold\">Correo</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"Escribe aquí tu correo\"\r\n                                className=\"w-full px-4 py-3 border rounded-lg bg-gray-50 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        {message && <p className=\"text-green-500 text-center\">{message}</p>}\r\n                        {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n\r\n                        <Button\r\n                            icon=\"/loginButton.svg\"\r\n                            iconWidth={500}\r\n                            iconHeight={64}\r\n                            bgColor=\"bg-transparent\"\r\n                            border=\"border-none\"\r\n                            type=\"submit\"\r\n                        />\r\n\r\n                        <div className=\"text-center space-y-4\">\r\n                            <Link href=\"/auth/login\" className=\"text-gray-400 hover:underline block\">\r\n                                Volver al inicio de sesión\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Sección de la imagen */}\r\n            <div className=\"hidden lg:flex flex-col justify-center items-center space-y-8 w-[700px] bg-green-500 border\">\r\n                <div>\r\n                    <Image\r\n                        className=\"dark:invert\"\r\n                        src=\"/logoSignUpLogin.svg\"\r\n                        alt=\"Logo de GanttFlow\"\r\n                        width={450}\r\n                        height={207}\r\n                        priority\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"flex text-white text-xl font-semibold\">\r\n                    <p>La solución que necesitas para tu proyecto</p>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASe,SAAS;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,SAAS;QAET,IAAI;YACA,MAAM,OAAO,MAAM,CAAA,GAAA,iHAAA,CAAA,oBAAiB,AAAD,EAAE;YACrC,WAAW,KAAK,OAAO;QAC3B,EAAE,OAAO,KAAK;YACV,IAAI,eAAe,OAAO;gBACtB,SAAS,IAAI,OAAO,IAAI;YAC5B,OAAO;gBACH,SAAS;YACb;YACA,QAAQ,KAAK,CAAC;QAClB;IACJ;IAEA,qBACI,8OAAC;QAAK,WAAU;;0BAEZ,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAAsC;;;;;;sCAEpD,8OAAC;4BAAK,UAAU;4BAAc,WAAU;;8CACpC,8OAAC;;sDACG,8OAAC;4CAAM,WAAU;sDAAY;;;;;;sDAC7B,8OAAC;4CACG,MAAK;4CACL,aAAY;4CACZ,WAAU;4CACV,OAAO;4CACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4CACxC,QAAQ;;;;;;;;;;;;gCAIf,yBAAW,8OAAC;oCAAE,WAAU;8CAA8B;;;;;;gCACtD,uBAAS,8OAAC;oCAAE,WAAU;8CAA4B;;;;;;8CAEnD,8OAAC,qHAAA,CAAA,UAAM;oCACH,MAAK;oCACL,WAAW;oCACX,YAAY;oCACZ,SAAQ;oCACR,QAAO;oCACP,MAAK;;;;;;8CAGT,8OAAC;oCAAI,WAAU;8CACX,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAc,WAAU;kDAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASzF,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;kCACG,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACF,WAAU;4BACV,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,QAAQ;;;;;;;;;;;kCAIhB,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAKvB"}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}