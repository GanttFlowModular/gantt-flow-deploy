{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/diegoalonso/Library/CloudStorage/GoogleDrive-diegoalonso872%40gmail.com/Mi%20unidad/UDG%20INNI/Proyecto%20Modular/Modular/gantt-flow/front/components/button.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\n\nexport default function Button({\n    text,\n    icon,\n    iconWidth = 24,  // Tamaño por defecto\n    iconHeight = 24, // Tamaño por defecto\n    type = \"button\",\n    bgColor = \"bg-sky-200\",\n    border = \"\",\n    hover = \"\",\n    redirectTo = \"\",\n    onClick\n}: {\n    text?: string;\n    icon?: string;\n    iconWidth?: number;\n    iconHeight?: number;\n    type?: \"button\" | \"submit\" | \"reset\";\n    bgColor?: string;\n    border?: string;\n    hover?: string;\n    redirectTo?: string;\n    onClick?: () => void;\n}) {\n    const router = useRouter();\n\n    const handleClick = async () => {\n        if (onClick) {\n            await onClick();\n        } else if (redirectTo) {\n            router.push(redirectTo);\n        }\n    };\n\n    return (\n        <button\n            type={type}\n            className={`p-2 rounded-lg flex items-center justify-center ${bgColor} transition ${border} ${hover}`}\n            onClick={handleClick}\n        >\n            {icon && <Image src={icon} alt=\"Icon\" width={iconWidth} height={iconHeight} />}\n            {text}\n        </button>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS,OAAO,EAC3B,IAAI,EACJ,IAAI,EACJ,YAAY,EAAE,EACd,aAAa,EAAE,EACf,OAAO,QAAQ,EACf,UAAU,YAAY,EACtB,SAAS,EAAE,EACX,QAAQ,EAAE,EACV,aAAa,EAAE,EACf,OAAO,EAYV;;IACG,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAChB,IAAI,SAAS;YACT,MAAM;QACV,OAAO,IAAI,YAAY;YACnB,OAAO,IAAI,CAAC;QAChB;IACJ;IAEA,qBACI,6LAAC;QACG,MAAM;QACN,WAAW,CAAC,gDAAgD,EAAE,QAAQ,YAAY,EAAE,OAAO,CAAC,EAAE,OAAO;QACrG,SAAS;;YAER,sBAAQ,6LAAC,gIAAA,CAAA,UAAK;gBAAC,KAAK;gBAAM,KAAI;gBAAO,OAAO;gBAAW,QAAQ;;;;;;YAC/D;;;;;;;AAGb;GA3CwB;;QAuBL,qIAAA,CAAA,YAAS;;;KAvBJ"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/diegoalonso/Library/CloudStorage/GoogleDrive-diegoalonso872%40gmail.com/Mi%20unidad/UDG%20INNI/Proyecto%20Modular/Modular/gantt-flow/front/app/lib/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api'; // URL de tu backend\n\nexport const createUser = async (userData: { name: string, email: string, mobile: string, password: string }) => {\n    try {\n        const response = await axios.post(`${API_URL}/users`, userData);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const loginUser = async (userData: { email: string, password: string }) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/login`, userData);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const sendRecoveryEmail = async (email: string) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/forgot-password`, { email });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const resetPassword = async (token: string, newPassword: string) => {\n    try {\n        const response = await axios.post(`${API_URL}/users/reset-password`, { token, newPassword });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const getAllUsersAdmin = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/admin/users`);\n        return response.data.data; // Retorna la lista de usuarios\n    } catch (error) {\n        console.error('Error al obtener los usuarios:', error);\n        throw error; // Lanza el error para manejarlo en el componente\n    }\n}\n\nexport const updatedUserAdmin = async (userId: string, userData: any) => {\n    try {\n        console.log('Enviando solicitud a:', `${API_URL}/admin/users/${userId}`); // Log para depuración\n        console.log('Datos enviados:', userData); // Log para depuración\n        const response = await axios.put(`${API_URL}/admin/users/${userId}`, userData);\n        return response.data; // Retorna el usuario actualizado\n    } catch (error) {\n        console.error('Error al actualizar el usuario:', error);\n        throw error; // Lanza el error para manejarlo en el componente\n    }\n}\n\nexport const deleteUserAdmin = async (userId: string) => {\n    try {\n        const response = await axios.delete(`${API_URL}/admin/users/${userId}`);\n        return response.data; // Retorna la respuesta del backend\n    } catch (error) {\n        console.error('Error al eliminar el usuario:', error);\n        throw error; // Lanza el error para manejarlo en el componente\n    }\n}\n\nexport const createUserAdmin = async (userData: { name: string, email: string, mobile: string, password: string }) => {\n    try {\n        const response = await axios.post(`${API_URL}/admin/users`, userData);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAEA,MAAM,UAAU,6BAA6B,oBAAoB;AAE1D,MAAM,aAAa,OAAO;IAC7B,IAAI;QACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,MAAM,CAAC,EAAE;QACtD,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,YAAY,OAAO;IAC5B,IAAI;QACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,YAAY,CAAC,EAAE;QAC5D,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,oBAAoB,OAAO;IACpC,IAAI;QACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,sBAAsB,CAAC,EAAE;YAAE;QAAM;QAC9E,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,gBAAgB,OAAO,OAAe;IAC/C,IAAI;QACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,qBAAqB,CAAC,EAAE;YAAE;YAAO;QAAY;QAC1F,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ;AAEO,MAAM,mBAAmB;IAC5B,IAAI;QACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,YAAY,CAAC;QACzD,OAAO,SAAS,IAAI,CAAC,IAAI,EAAE,+BAA+B;IAC9D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM,OAAO,iDAAiD;IAClE;AACJ;AAEO,MAAM,mBAAmB,OAAO,QAAgB;IACnD,IAAI;QACA,QAAQ,GAAG,CAAC,yBAAyB,GAAG,QAAQ,aAAa,EAAE,QAAQ,GAAG,sBAAsB;QAChG,QAAQ,GAAG,CAAC,mBAAmB,WAAW,sBAAsB;QAChE,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,aAAa,EAAE,QAAQ,EAAE;QACrE,OAAO,SAAS,IAAI,EAAE,iCAAiC;IAC3D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM,OAAO,iDAAiD;IAClE;AACJ;AAEO,MAAM,kBAAkB,OAAO;IAClC,IAAI;QACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,GAAG,QAAQ,aAAa,EAAE,QAAQ;QACtE,OAAO,SAAS,IAAI,EAAE,mCAAmC;IAC7D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM,OAAO,iDAAiD;IAClE;AACJ;AAEO,MAAM,kBAAkB,OAAO;IAClC,IAAI;QACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,YAAY,CAAC,EAAE;QAC5D,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,MAAM;IACV;AACJ"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/diegoalonso/Library/CloudStorage/GoogleDrive-diegoalonso872%40gmail.com/Mi%20unidad/UDG%20INNI/Proyecto%20Modular/Modular/gantt-flow/front/app/admin/users/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport Button from \"../../../components/button\";\nimport { getAllUsersAdmin, updatedUserAdmin, deleteUserAdmin, createUserAdmin } from \"@/app/lib/api\";\n\ninterface User {\n    _id: string;\n    name: string;\n    email: string;\n    mobile: string;\n    role: string;\n}\n\nexport default function adminPage() {\n    const router = useRouter();\n    const [date, setDate] = useState('');\n    const [user, setUser] = useState<{ name: string } | null>(null);\n    const [users, setUsers] = useState<User[]>([]); // Estado para almacenar la lista de usuarios\n    const [editingUser, setEditingUser] = useState<User | null>(null); // Estado para el usuario que se está editando\n    const [isCreatingUser, setIsCreatingUser] = useState(false); // Estado para controlar la visibilidad del formulario\n    const [newUser, setNewUser] = useState({ // Estado para almacenar los datos del nuevo usuario\n        name: '',\n        email: '',\n        mobile: '',\n        password: '',\n        role: '',\n    })\n\n    // Obtener usuarios desde el backend\n    const fetchUsers = async () => {\n        try {\n            const usersData = await getAllUsersAdmin(); \n            console.log('Usuarios obtenidos:', usersData); // Log para depuración\n            setUsers(usersData);\n        } catch (error) {\n            console.error('Error al obtener los usuarios:', error);\n        }\n    };\n\n    // Función para manejar la edición de un usuario\n    const handleEditUser = (user: User) => {\n        setEditingUser(user);\n    };\n\n    // Función para guardar los cambios de un usuario\n    const handleSaveUser = async (updatedUser: User) => {\n        try {\n            const savedUser = await updatedUserAdmin(updatedUser._id, updatedUser); // Llama a la función updateUser\n            const updatedUsers = users.map((user) =>\n            user._id === savedUser._id ? savedUser : user\n        );\n        setUsers(updatedUsers); // Actualiza la lista de usuarios\n        setEditingUser(null);\n        await fetchUsers();//refrescar la lista de usuarios\n        } catch (error) {\n            console.error('Error al actualizar el usuario:', error);\n        }\n    };\n\n    // Función para eliminar un usuario\n    const handleDeleteUser = async (userId: string) => {\n        const isConfirmed = window.confirm('¿Estás seguro de que quieres eliminar este usuario?');\n        if (!isConfirmed) {\n            return; // Si el usuario cancela, no hacer nada\n        }\n        try {\n            await deleteUserAdmin(userId); // Llama a la función deleteUser\n            if (editingUser?._id === userId) {\n                setEditingUser(null); // Limpiar el estado editingUser si el usuario eliminado estaba en edición\n            }\n            await fetchUsers();\n        } catch (error) {\n            console.error('Error al eliminar el usuario:', error);\n        }\n    }\n    const openCreateUserForm = () => {\n        setIsCreatingUser(true); // Mostrar el formulario de creación\n    }\n    const closeCreateUserForm = () => {\n        setIsCreatingUser(false); // Ocultar el formulario de creación\n        setNewUser({ // Restablecer los datos del nuevo usuario\n            name: '',\n            email: '',\n            mobile: '',\n            password: '',\n            role: '',\n        })\n    }\n    const handleNewUserChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const { name, value } = e.target;\n        setNewUser({ ...newUser, [name]: value });\n    }\n    const handleCreateUser = async () => {\n        try {\n            const createdUser = await createUserAdmin(newUser); // Llama a la función createUser\n            setUsers([...users, createdUser]); // Agrega el nuevo usuario a la lista\n            closeCreateUserForm(); // Cierra el formulario de creación\n        } catch (error) {\n            console.error('Error al crear el usuario:', error);\n        }\n    }\n\n    useEffect(() => {\n        // Obtener el token y los datos del usuario desde localStorage\n        const token = localStorage.getItem('token');\n        const userData = localStorage.getItem('user');\n\n        if (!token || !userData) {\n            // Si no hay token o datos de usuario, redirigir al login\n            router.push('/auth/login');\n        } else {\n            // Si hay datos de usuario, parsearlos y guardarlos en el estado\n            setUser(JSON.parse(userData));\n        }\n\n        // Formatear la fecha\n        const today = new Date();\n        const dayName = today.toLocaleDateString('es-MX', { weekday: 'long' });\n        const month = today.toLocaleDateString('es-MX', { month: 'long' });\n        const day = today.getDate();\n        const year = today.getFullYear();\n\n        const capitalizedDayName = dayName.charAt(0).toUpperCase() + dayName.slice(1);\n        const capitalizedMonth = month.charAt(0).toUpperCase() + month.slice(1);\n\n        const formattedDate = `${capitalizedDayName}, ${day} de ${capitalizedMonth} de ${year}`;\n        setDate(formattedDate);\n\n        // Obtener la lista de usuarios al cargar la página\n        fetchUsers();\n    }, [router]);\n\n    const handleLogout = () => {\n        // Eliminar el token y los datos del usuario de localStorage\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n\n        // Redirigir al login\n        router.push('/auth/login');\n    };\n\n    if (!user) {\n        return <p>Cargando...</p>; // Mostrar un mensaje de carga mientras se verifica la autenticación\n    }\n\n    return (\n        <div className=\"min-h-screen flex flex-col m-4 mx-4\">\n            {/* Header */}\n            <header className=\"flex justify-start items-center\">\n                <div className=\"ml-8\">\n                    <Image\n                        className=\"dark:invert\"\n                        src=\"/logo.svg\"\n                        alt=\"Next.js logo\"\n                        width={40}\n                        height={40}\n                        priority\n                    />\n                </div>\n                <div>\n                    <Image\n                        className=\"dark:invert\"\n                        src=\"/ganttflow.svg\"\n                        alt=\"Ganttflow logo\"\n                        width={114}\n                        height={18}\n                        priority\n                    />\n                </div>\n                <div className=\"ml-auto\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"pl-4 pr-96 py-2 border border-blue-500 placeholder-black rounded-full\"\n                    />\n                </div>\n                <div className=\"ml-auto mr-4\">\n                    <Button\n                        icon=\"/bell.svg\"\n                        iconWidth={40}\n                        iconHeight={40}\n                        bgColor=\"bg-transparent\"\n                        border=\"border-none\"\n                    />\n                </div>\n                <div className=\"space-x-16\">\n                    <Button\n                        icon=\"/avatar.svg\"\n                        iconWidth={40}\n                        iconHeight={40}\n                        bgColor=\"bg-transparent\"\n                        border=\"border-none\"\n                    />\n                </div>\n            </header>\n\n            {/* Main content */}\n            <main className=\"flex flex-row justify-start flex-grow\">\n                {/* Barra lateral */}\n                <div className=\"w-[219px] h-[720px] bg-green-500 rounded-lg shadow-lg mt-8 mr-8 text-white flex flex-col p-4\">\n                    {/* Navigation Items */}\n                    <div className=\"flex flex-col space-y-4\">\n                        <Link href=\"/admin/users\" className=\"flex items-center space-x-1\">\n                            <Button\n                                icon=\"/home.svg\"\n                                iconWidth={30}\n                                iconHeight={30}\n                                bgColor=\"bg-transparent\"\n                                border=\"border-none\"\n                            />\n                            <span>Inicio</span>\n                        </Link>\n                        <Link href=\"/admin/users\" className=\"flex items-center space-x-1\">\n                            <Button\n                                icon=\"/users.svg\"\n                                iconWidth={30}\n                                iconHeight={30}\n                                bgColor=\"bg-transparent\"\n                                border=\"border-none\"\n                            />\n                            <span>Usuarios</span>\n                        </Link>\n                        <Link href=\"/admin/settings\" className=\"flex items-center space-x-1\">\n                            <Button\n                                icon=\"/settings.svg\"\n                                iconWidth={30}\n                                iconHeight={30}\n                                bgColor=\"bg-transparent\"\n                                border=\"border-none\"\n                            />\n                            <span>Configuración</span>\n                        </Link>\n                        <Link href=\"/admin/permissions\" className=\"flex items-center space-x-1\">\n                            <Button\n                                icon=\"/permissions.svg\"\n                                iconWidth={30}\n                                iconHeight={30}\n                                bgColor=\"bg-transparent\"\n                                border=\"border-none\"\n                            />\n                            <span>Permisos</span>\n                        </Link>\n                    </div>\n\n                    {/* Logout */}\n                    <div className=\"flex items-center space-x-1 mt-auto\">\n                        <Button\n                            icon=\"/logout.svg\"\n                            iconWidth={32}\n                            iconHeight={30}\n                            bgColor=\"bg-transparent\"\n                            border=\"border-none\"\n                            onClick={handleLogout}\n                        />\n                        <span onClick={handleLogout} className=\"cursor-pointer\">\n                            Cerrar sesión\n                        </span>\n                    </div>\n                </div>\n\n                {/* Contenido principal */}\n                <div className=\"flex flex-col flex-grow ml-8\">\n                    <p className=\"mt-14 font-semibold\">{date}</p>\n                    <h1 className=\"text-7xl mt-4\">Hola, {user.name}</h1>\n\n                    {/* Tabla de usuarios */}\n                    <div className=\"mt-8\">\n                        <h2 className=\"text-2xl font-bold mb-4\">Gestión de Usuarios</h2>\n                        <button\n                            onClick={openCreateUserForm}\n                            className=\"bg-green-500 text-white px-4 py-2 rounded\" \n                        >\n                            Agregar usuario\n                        </button>\n                        <table className=\"min-w-full bg-gray border border-gray-300\">\n                            <thead>\n                                <tr className=\"bg-green-500\">\n                                    <th className=\"py-2 px-4 border-b\">Nombre</th>\n                                    <th className=\"py-2 px-4 border-b\">Email</th>\n                                    <th className=\"py-2 px-4 border-b\">Teléfono</th>\n                                    <th className=\"py-2 px-4 border-b\">Rol</th>\n                                    <th className=\"py-2 px-4 border-b\">Acciones</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {users.map((user) =>\n                                editingUser?._id === user._id ? (\n                                    <tr key={user._id}>\n                                        <td className=\"py-2 px-4 border-b\">\n                                            <input\n                                                type=\"text\"\n                                                value={editingUser.name}\n                                                onChange={(e) =>\n                                                    setEditingUser({ ...editingUser, name: e.target.value })\n                                                }\n                                                className=\"w-full px-2 py-1 border rounded\"\n                                            />\n                                        </td>\n                                        <td className=\"py-2 px-4 border-b\">\n                                            <input\n                                                type=\"email\"\n                                                value={editingUser.email}\n                                                onChange={(e) =>\n                                                    setEditingUser({ ...editingUser, email: e.target.value })\n                                                }\n                                                className=\"w-full px-2 py-1 border rounded\"\n                                            />\n                                        </td>\n                                        <td className=\"py-2 px-4 border-b\">\n                                            <input\n                                                type=\"text\"\n                                                value={editingUser.mobile}\n                                                onChange={(e) =>\n                                                    setEditingUser({ ...editingUser, mobile: e.target.value })\n                                                }\n                                                className=\"w-full px-2 py-1 border rounded\"\n                                            />\n                                        </td>\n                                        <td className=\"py-2 px-4 border-b\">\n                                            <select\n                                                value={editingUser.role}\n                                                onChange={(e) =>\n                                                    setEditingUser({ ...editingUser, role: e.target.value })\n                                                }\n                                                className=\"w-full px-2 py-1 border rounded\"\n                                            >\n                                                <option value=\"user\">Usuario</option>\n                                                <option value=\"admin\">Administrador</option>\n                                            </select>\n                                        </td>\n                                        <td className=\"py-2 px-4 border-b\">\n                                            <button\n                                                onClick={() => handleSaveUser(editingUser)}\n                                                className=\"bg-blue-500 text-white px-4 py-1 rounded\"\n                                            >\n                                                Guardar\n                                            </button>\n                                            <button\n                                                onClick={() => setEditingUser(null)}\n                                                className=\"bg-gray-500 text-white px-4 py-1 rounded ml-2\"\n                                            >\n                                                Cancelar\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ) : (\n                                    <tr key={user._id}>\n                                        <td className=\"py-2 px-4 border-b\">{user.name}</td>\n                                        <td className=\"py-2 px-4 border-b\">{user.email}</td>\n                                        <td className=\"py-2 px-4 border-b\">{user.mobile}</td>\n                                        <td className=\"py-2 px-4 border-b\">{user.role}</td>\n                                        <td className=\"py-2 px-4 border-b\">\n                                            <button\n                                                onClick={() => handleEditUser(user)}\n                                                className=\"bg-yellow-500 text-white px-4 py-1 rounded\"\n                                            >\n                                                Editar\n                                            </button>\n                                            <button\n                                                onClick={() => handleDeleteUser(user._id)}\n                                                className=\"bg-red-500 text-white px-4 py-1 rounded ml-2\"\n                                            >\n                                                Eliminar\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            )}\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </main>\n            {isCreatingUser && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n                    <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n                        <h2 className=\"text-xl font-bold mb-4\">Crear nuevo usuario</h2>\n                        <div className=\"space-y-4\">\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                placeholder=\"Nombre\"\n                                value={newUser.name}\n                                onChange={handleNewUserChange}\n                                className=\"w-full px-2 py-1 border rounded\"\n                            />\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                placeholder=\"Email\"\n                                value={newUser.email}\n                                onChange={handleNewUserChange}\n                                className=\"w-full px-2 py-1 border rounded\"\n                            />\n                            <input\n                                type=\"text\"\n                                name=\"mobile\"\n                                placeholder=\"Teléfono\"\n                                value={newUser.mobile}\n                                onChange={handleNewUserChange}\n                                className=\"w-full px-2 py-1 border rounded\"\n                            />\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Contraseña\"\n                                value={newUser.password}\n                                onChange={handleNewUserChange}\n                                className=\"w-full px-2 py-1 border rounded\"\n                            />\n                            <select\n                                name=\"role\"\n                                value={newUser.role}\n                                onChange={handleNewUserChange}\n                                className=\"w-full px-2 py-1 border rounded\"\n                            >\n                                <option value=\"user\">Usuario</option>\n                                <option value=\"admin\">Administrador</option>\n                            </select>\n                        </div>\n                        <div className=\"flex justify-end space-x-4 mt-4\">\n                            <button\n                                onClick={closeCreateUserForm}\n                                className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n                            >\n                                Cancelar\n                            </button>\n                            <button\n                                onClick={handleCreateUser}\n                                className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n                            >\n                                Crear\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}